name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v[0-9]+.[0-9]+.[0-9]+*' ]
  workflow_dispatch:

jobs:
  # Job 1: 负责构建所有东西，并上传 artifact
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies and build C targets
        run: |
          # 如果有 C 语言的依赖，在这里安装
          sudo apt-get update && sudo apt-get install -y build-essential
          make all
          
      - name: Build CLI package (wheel + sdist)
        run: |
          python -m pip install --upgrade build
          # 将 C 编译产物复制到打包目录
          mkdir -p tools/cli/src/ming_drlms/bin
          cp -f log_collector_server libipc.so proc_launcher log_consumer ipc_sender tools/cli/src/ming_drlms/bin/
          # 执行构建
          python -m build tools/cli

      - name: Upload distribution artifact
        uses: actions/upload-artifact@v4
        with:
          name: ming-drlms-dist
          path: tools/cli/dist/*

  # Job 2: 负责发布到 TestPyPI
  publish-to-testpypi:
    runs-on: ubuntu-latest
    needs: build # 依赖 build job
    # 优化：只在推送到 main 分支时自动运行，避免在打 tag 时也运行
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download dist from build job
        uses: actions/download-artifact@v4
        with:
          name: ming-drlms-dist
          path: dist
          
      - name: Publish to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          python -m pip install --upgrade twine
          python -m twine upload --repository testpypi dist/*

  # Job 3: 负责发布到正式 PyPI
  publish-to-pypi:
    runs-on: ubuntu-latest
    needs: build # 依赖 build job
    # 关键条件：只有在打 tag 的时候才运行
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: production
      url: https://pypi.org/p/ming-drlms
    steps:
      - name: Download dist from build job
        uses: actions/download-artifact@v4
        with:
          name: ming-drlms-dist
          path: dist
          
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m pip install --upgrade twine
          python -m twine upload dist/*
          