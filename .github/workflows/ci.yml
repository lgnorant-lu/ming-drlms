name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 增加缓存 pip 依赖项以加快后续运行速度
      - name: Cache Pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          # 当 pyproject.toml 文件内容变化时，缓存将重新生成
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml', '**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # All system-level dependencies are installed in one step for clarity and efficiency.
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libssl-dev \
            netcat-openbsd \
            lcov \
            clang-format \
            cppcheck

      - name: Install Python Dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Install Python CLI Application Dependencies
        run: python -m pip install ./tools/cli

      # Python linting and formatting checks.
      - name: Lint and Format Check with Ruff
        run: |
          python3 -m pip install ruff
          echo "--- Linting Python code ---"
          ruff check .
          echo "--- Checking Python code formatting ---"
          ruff format --check .

      # C/C++ formatting checks.
      - name: Check C code formatting with clang-format
        run: |
          echo "--- Checking C/C++ code formatting ---"
          find src tests -name "*.c" -o -name "*.h" | xargs clang-format --dry-run --Werror

      # C/C++ static analysis security scan.
      - name: Run Cppcheck Security Scan
        run: |
          echo "--- Running Cppcheck SAST scan ---"
          cppcheck --enable=all --error-exitcode=1 --language=c -I src/libipc --suppress=missingIncludeSystem src/ tests/

      - name: Build C targets
        run: |
          make all

      - name: Install CLI via pipx (for space integration tests)
        run: |
          python3 -m pip install --user pipx
          python3 -m pipx ensurepath
          # Install the CLI tool from the 'tools/cli' directory.
          # Use --force to ensure it overwrites any existing installation.
          python3 -m pipx install --force ./tools/cli
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Run All Tests and Generate Coverage Report
        env:
          # Use FAST mode to prevent timeouts in CI
          FAST: 1
          IDLE_SECONDS: 10
          DELEGATE_POLL_LOOPS: 10
          TEARDOWN_WAIT_LOOPS: 10
          RETAIN_LOG_WAIT_LOOPS: 50
          NC_FLAGS: '-w 2'
          # This variable is used by the test scripts
          COVERAGE_MIN: "1"
        run: |
          make coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-reports
          path: coverage/html
          if-no-files-found: warn

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: drlms-binaries
          path: |
            log_collector_server
            log_agent
            log_consumer
            ipc_sender
            proc_launcher
            libipc.so
          if-no-files-found: warn

      - name: Build CLI (wheel + sdist)
        run: |
          python3 -m pip install --upgrade pip build
          # ensure C binaries are present and copy into the CLI package bin/
          mkdir -p tools/cli/src/ming_drlms/bin
          cp -f log_collector_server log_agent libipc.so proc_launcher log_consumer ipc_sender tools/cli/src/ming_drlms/bin/
          python3 -m build tools/cli

      - name: Upload CLI dist
        uses: actions/upload-artifact@v4
        with:
          name: ming-drlms-dist
          path: tools/cli/dist/*
          if-no-files-found: error
